1. Basic information
Student ID : 
Student Name : Xiao Zhang
OS (bit) : 64
gcc version : 5.4


2. Internal Record Format
- Show your record format design and describe how your design satisfies O(1) field access. If not, just mention that you haven't implemented this feature.
- Describe how you store a VarChar field.


3. Page Format
- Show your page format design
 ________________________________
| Records                         |
----------------------------------
| Records                         |
----------------------------------
|[slot n]...[slot 1][slot 0][N][F]|
|_________________________________|



4. Implementation Detail
- Other implementation details goes here.

In my implementation, I make a hidden page at the beginning of the file. Inside the FileHandle class, it can
be accessed as page 0. When FH::readPage and FH::writePage are being called from other class, the functions
will actually read/write pageNum+1, since the file actually has one more hidden page that outer layer doesn't know. 
And when calling getNumberOfPages(), it will give the actuall number - 1 to hide the hidden page. 

To keep the counter values persist in the file, each and every time they get modified, the first 100 bytes
will be cleared and new values will be write.

Record format (in page):
  - [num of attributes][size of att #1][size of att #2]...[size of att # n][att #1][att #2]...[att #n]
  - Empty varchar: put -1 in [size of att #k]
  - NULL attribute: pit 0 in [size of att #k]
  - Total size:
  - [size of int]+[n*size of int]+[total size of attributes data]

5. Other (optional)
- Freely use this section to tell us about things that are related to the project 1, but not related to the other sections (optional)

